{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAQ",
    "description": "OpenAQ API",
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "https://api.openaq.org/"
    }
  ],
  "paths": {
    "/v3/instruments/{instruments_id}": {
      "get": {
        "tags": ["v3-alpha"],
        "summary": "Get an instrument by ID",
        "description": "Provides a instrument by instrument ID",
        "operationId": "instrument_get_v3_instruments__instruments_id__get",
        "parameters": [
          {
            "name": "instruments_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Limit the results to a specific instruments id",
              "title": "Instruments Id"
            },
            "description": "Limit the results to a specific instruments id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstrumentsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v3/instruments": {
      "get": {
        "tags": ["v3-alpha"],
        "summary": "Get instruments",
        "description": "Provides a list of instruments",
        "operationId": "instruments_get_v3_instruments_get",
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/InstrumentsSortFields"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The field by which to order results",
              "examples": ["order_by=id"],
              "default": "id",
              "title": "Order By"
            },
            "description": "The field by which to order results"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sort results ascending or descending. Default ASC",
              "examples": ["sort=desc"],
              "default": "asc",
              "title": "Sort Order"
            },
            "description": "Sort results ascending or descending. Default ASC"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Change the number of results returned.\n        e.g. limit=100 will return up to 100 results",
              "examples": ["100"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Change the number of results returned.\n        e.g. limit=100 will return up to 100 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstrumentsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v3/manufacturers/{manufacturers_id}/instruments": {
      "get": {
        "tags": ["v3-alpha"],
        "summary": "Get instruments by manufacturer ID",
        "description": "Provides a list of instruments for a specific manufacturer",
        "operationId": "get_instruments_by_manufacturer_v3_manufacturers__manufacturers_id__instruments_get",
        "parameters": [
          {
            "name": "manufacturers_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Limit results to a specific manufacturer id",
              "title": "Manufacturers Id"
            },
            "description": "Limit results to a specific manufacturer id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstrumentsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v3/locations/{locations_id}": {
      "get": {
        "tags": ["v3-alpha"],
        "summary": "Get a location by ID",
        "description": "Provides a location by location ID",
        "operationId": "location_get_v3_locations__locations_id__get",
        "parameters": [
          {
            "name": "locations_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Limit the results to a specific location by id",
              "title": "Locations Id"
            },
            "description": "Limit the results to a specific location by id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openaq_api__v3__models__responses__LocationsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v3/locations": {
      "get": {
        "tags": ["v3-alpha"],
        "summary": "Get locations",
        "description": "Provides a list of locations",
        "operationId": "locations_get_v3_locations_get",
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/LocationsSortFields"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The field by which to order results",
              "examples": ["order_by=id"],
              "default": "id",
              "title": "Order By"
            },
            "description": "The field by which to order results"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sort results ascending or descending. Default ASC",
              "examples": ["sort=desc"],
              "default": "asc",
              "title": "Sort Order"
            },
            "description": "Sort results ascending or descending. Default ASC"
          },
          {
            "name": "monitor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Is the location considered a reference monitor?",
              "title": "Monitor"
            },
            "description": "Is the location considered a reference monitor?"
          },
          {
            "name": "mobile",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Is the location considered a mobile location?",
              "title": "Mobile"
            },
            "description": "Is the location considered a mobile location?"
          },
          {
            "name": "iso",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit the results to a specific country using ISO 3166-1 alpha-2 code",
              "examples": ["US"],
              "title": "Iso"
            },
            "description": "Limit the results to a specific country using ISO 3166-1 alpha-2 code"
          },
          {
            "name": "countries_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit the results to a specific country or countries by country ID as a single country ID or a comma delimited list of IDs",
              "examples": ["1", "1,2,3"],
              "title": "Countries Id"
            },
            "description": "Limit the results to a specific country or countries by country ID as a single country ID or a comma delimited list of IDs"
          },
          {
            "name": "owner_contacts_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit the results to a specific owner by owner ID with a single owner ID or comma delimited list of IDs",
              "title": "Owner Contacts Id"
            },
            "description": "Limit the results to a specific owner by owner ID with a single owner ID or comma delimited list of IDs"
          },
          {
            "name": "providers_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit the results to a specific provider or multiple providers  with a single provider ID or a comma delimited list of IDs",
              "examples": ["1", "1,2,3"],
              "title": "Providers Id"
            },
            "description": "Limit the results to a specific provider or multiple providers  with a single provider ID or a comma delimited list of IDs"
          },
          {
            "name": "parameters_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parameters Id"
            }
          },
          {
            "name": "bbox",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "geospatial bounding box of Min X, min Y, max X, max Y in WGS 84 coordinates. Up to 4 decimal points of precision, addtional decimal precision will be truncated to 4 decimal points precision e.g. -77.037,38.907,-77.0,39.910",
              "examples": ["-77.1200,38.7916,-76.9094,38.9955"],
              "title": "Bbox"
            },
            "description": "geospatial bounding box of Min X, min Y, max X, max Y in WGS 84 coordinates. Up to 4 decimal points of precision, addtional decimal precision will be truncated to 4 decimal points precision e.g. -77.037,38.907,-77.0,39.910"
          },
          {
            "name": "coordinates",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "WGS 84 Coordinate pair in form latitude,longitude. Supports up to 4 decimal points of precision, additional decimal precision will be truncated in the query e.g. 38.9074,-77.0373",
              "examples": ["38.907,-77.037"],
              "title": "Coordinates"
            },
            "description": "WGS 84 Coordinate pair in form latitude,longitude. Supports up to 4 decimal points of precision, additional decimal precision will be truncated in the query e.g. 38.9074,-77.0373"
          },
          {
            "name": "radius",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 25000,
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search radius from coordinates as center in meters. Maximum of 25,000 (25km) defaults to 1000 (1km) e.g. radius=1000",
              "examples": ["1000"],
              "title": "Radius"
            },
            "description": "Search radius from coordinates as center in meters. Maximum of 25,000 (25km) defaults to 1000 (1km) e.g. radius=1000"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Change the number of results returned.\n        e.g. limit=100 will return up to 100 results",
              "examples": ["100"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Change the number of results returned.\n        e.g. limit=100 will return up to 100 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openaq_api__v3__models__responses__LocationsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v3/parameters/{parameters_id}": {
      "get": {
        "tags": ["v3-alpha"],
        "summary": "Get a parameter by ID",
        "description": "Provides a parameter by parameter ID",
        "operationId": "parameter_get_v3_parameters__parameters_id__get",
        "parameters": [
          {
            "name": "parameters_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Limit the results to a specific parameters id",
              "title": "Parameters Id"
            },
            "description": "Limit the results to a specific parameters id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openaq_api__v3__models__responses__ParametersResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v3/parameters": {
      "get": {
        "tags": ["v3-alpha"],
        "summary": "Get a parameters",
        "description": "Provides a list of parameters",
        "operationId": "parameters_get_v3_parameters_get",
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ParametersSortFields"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The field by which to order results",
              "examples": ["order_by=id"],
              "default": "id",
              "title": "Order By"
            },
            "description": "The field by which to order results"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sort results ascending or descending. Default ASC",
              "examples": ["sort=desc"],
              "default": "asc",
              "title": "Sort Order"
            },
            "description": "Sort results ascending or descending. Default ASC"
          },
          {
            "name": "parameter_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ParameterType"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit the results to a specific parameters type",
              "examples": ["pollutant", "meteorological"],
              "title": "Parameter Type"
            },
            "description": "Limit the results to a specific parameters type"
          },
          {
            "name": "coordinates",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "WGS 84 Coordinate pair in form latitude,longitude. Supports up to 4 decimal points of precision, additional decimal precision will be truncated in the query e.g. 38.9074,-77.0373",
              "examples": ["38.907,-77.037"],
              "title": "Coordinates"
            },
            "description": "WGS 84 Coordinate pair in form latitude,longitude. Supports up to 4 decimal points of precision, additional decimal precision will be truncated in the query e.g. 38.9074,-77.0373"
          },
          {
            "name": "radius",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 25000,
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search radius from coordinates as center in meters. Maximum of 25,000 (25km) defaults to 1000 (1km) e.g. radius=1000",
              "examples": ["1000"],
              "title": "Radius"
            },
            "description": "Search radius from coordinates as center in meters. Maximum of 25,000 (25km) defaults to 1000 (1km) e.g. radius=1000"
          },
          {
            "name": "bbox",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "geospatial bounding box of Min X, min Y, max X, max Y in WGS 84 coordinates. Up to 4 decimal points of precision, addtional decimal precision will be truncated to 4 decimal points precision e.g. -77.037,38.907,-77.0,39.910",
              "examples": ["-77.1200,38.7916,-76.9094,38.9955"],
              "title": "Bbox"
            },
            "description": "geospatial bounding box of Min X, min Y, max X, max Y in WGS 84 coordinates. Up to 4 decimal points of precision, addtional decimal precision will be truncated to 4 decimal points precision e.g. -77.037,38.907,-77.0,39.910"
          },
          {
            "name": "iso",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit the results to a specific country using ISO 3166-1 alpha-2 code",
              "examples": ["US"],
              "title": "Iso"
            },
            "description": "Limit the results to a specific country using ISO 3166-1 alpha-2 code"
          },
          {
            "name": "countries_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit the results to a specific country or countries by country ID as a single country ID or a comma delimited list of IDs",
              "examples": ["1", "1,2,3"],
              "title": "Countries Id"
            },
            "description": "Limit the results to a specific country or countries by country ID as a single country ID or a comma delimited list of IDs"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Change the number of results returned.\n        e.g. limit=100 will return up to 100 results",
              "examples": ["100"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Change the number of results returned.\n        e.g. limit=100 will return up to 100 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openaq_api__v3__models__responses__ParametersResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v3/countries/{countries_id}": {
      "get": {
        "tags": ["v3-alpha"],
        "summary": "Get a country by ID",
        "description": "Provides a country by country ID",
        "operationId": "country_get_v3_countries__countries_id__get",
        "parameters": [
          {
            "name": "countries_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Countries Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openaq_api__v3__models__responses__CountriesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v3/countries": {
      "get": {
        "tags": ["v3-alpha"],
        "summary": "Get countries",
        "description": "Provides a list of countries",
        "operationId": "countries_get_v3_countries_get",
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/CountriesSortFields"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The field by which to order results",
              "examples": ["order_by=id"],
              "default": "id",
              "title": "Order By"
            },
            "description": "The field by which to order results"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sort results ascending or descending. Default ASC",
              "examples": ["sort=desc"],
              "default": "asc",
              "title": "Sort Order"
            },
            "description": "Sort results ascending or descending. Default ASC"
          },
          {
            "name": "providers_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit the results to a specific provider or multiple providers  with a single provider ID or a comma delimited list of IDs",
              "examples": ["1", "1,2,3"],
              "title": "Providers Id"
            },
            "description": "Limit the results to a specific provider or multiple providers  with a single provider ID or a comma delimited list of IDs"
          },
          {
            "name": "parameters_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parameters Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Change the number of results returned.\n        e.g. limit=100 will return up to 100 results",
              "examples": ["100"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Change the number of results returned.\n        e.g. limit=100 will return up to 100 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openaq_api__v3__models__responses__CountriesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v3/manufacturers/{manufacturers_id}": {
      "get": {
        "tags": ["v3-alpha"],
        "summary": "Get a manufacturer by ID",
        "description": "Provides a manufacturer by manufacturer ID",
        "operationId": "manufacturer_get_v3_manufacturers__manufacturers_id__get",
        "parameters": [
          {
            "name": "manufacturers_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Limit the results to a specific manufacturers id",
              "title": "Manufacturers Id"
            },
            "description": "Limit the results to a specific manufacturers id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManufacturersResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v3/manufacturers": {
      "get": {
        "tags": ["v3-alpha"],
        "summary": "Get manufacturers",
        "description": "Provides a list of manufacturers",
        "operationId": "manufacturers_get_v3_manufacturers_get",
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ManufacturersSortFields"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The field by which to order results",
              "examples": ["order_by=id"],
              "default": "id",
              "title": "Order By"
            },
            "description": "The field by which to order results"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sort results ascending or descending. Default ASC",
              "examples": ["sort=desc"],
              "default": "asc",
              "title": "Sort Order"
            },
            "description": "Sort results ascending or descending. Default ASC"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Change the number of results returned.\n        e.g. limit=100 will return up to 100 results",
              "examples": ["100"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Change the number of results returned.\n        e.g. limit=100 will return up to 100 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManufacturersResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v3/locations/{locations_id}/measurements": {
      "get": {
        "tags": ["v3-alpha"],
        "summary": "Get measurements by location (DEPRECATING - will be removed in future releases)",
        "description": "Provides a list of measurements by location ID",
        "operationId": "measurements_get_v3_locations__locations_id__measurements_get",
        "parameters": [
          {
            "name": "locations_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Limit the results to a specific location by id",
              "title": "Locations Id"
            },
            "description": "Limit the results to a specific location by id"
          },
          {
            "name": "period_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PeriodNames"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Period to aggregate. Month, day, hour, hour of day (hod), day of week (dow) and month of year (moy)",
              "default": "hour",
              "title": "Period Name"
            },
            "description": "Period to aggregate. Month, day, hour, hour of day (hod), day of week (dow) and month of year (moy)"
          },
          {
            "name": "parameters_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parameters Id"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "To when?",
              "examples": ["2022-10-01T11:19:38-06:00", "2022-10-01"],
              "title": "Date To"
            },
            "description": "To when?"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "From when?",
              "examples": ["2022-10-01T11:19:38-06:00", "2022-10-01"],
              "title": "Date From"
            },
            "description": "From when?"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Change the number of results returned.\n        e.g. limit=100 will return up to 100 results",
              "examples": ["100"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Change the number of results returned.\n        e.g. limit=100 will return up to 100 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openaq_api__v3__models__responses__MeasurementsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v3/owners/{owners_id}": {
      "get": {
        "tags": ["v3-alpha"],
        "summary": "Get a owner by ID",
        "description": "Provides a owner by owner ID",
        "operationId": "owner_get_v3_owners__owners_id__get",
        "parameters": [
          {
            "name": "owners_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Limit the results to a specific owner by id",
              "title": "Owners Id"
            },
            "description": "Limit the results to a specific owner by id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnersResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v3/owners": {
      "get": {
        "tags": ["v3-alpha"],
        "summary": "Get owners",
        "description": "Provides a list of owners",
        "operationId": "owners_get_v3_owners_get",
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/OwnersSortFields"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The field by which to order results",
              "examples": ["order_by=id"],
              "default": "id",
              "title": "Order By"
            },
            "description": "The field by which to order results"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sort results ascending or descending. Default ASC",
              "examples": ["sort=desc"],
              "default": "asc",
              "title": "Sort Order"
            },
            "description": "Sort results ascending or descending. Default ASC"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Change the number of results returned.\n        e.g. limit=100 will return up to 100 results",
              "examples": ["100"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Change the number of results returned.\n        e.g. limit=100 will return up to 100 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnersResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v3/locations/{locations_id}/trends/{measurands_id}": {
      "get": {
        "tags": ["v3-alpha"],
        "summary": "Get trends by location",
        "description": "Provides a list of aggregated measurements by location ID and factor",
        "operationId": "trends_get_v3_locations__locations_id__trends__measurands_id__get",
        "parameters": [
          {
            "name": "measurands_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Measurands Id"
            }
          },
          {
            "name": "locations_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Locations Id"
            }
          },
          {
            "name": "period_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PeriodNames"
                },
                {
                  "type": "null"
                }
              ],
              "default": "hour",
              "title": "Period Name"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrendsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v3/providers/{providers_id}": {
      "get": {
        "tags": ["v3-alpha"],
        "summary": "Get a provider by ID",
        "description": "Provides a provider by provider ID",
        "operationId": "provider_get_v3_providers__providers_id__get",
        "parameters": [
          {
            "name": "providers_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Limit the results to a specific provider by id",
              "title": "Providers Id"
            },
            "description": "Limit the results to a specific provider by id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProvidersResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v3/providers": {
      "get": {
        "tags": ["v3-alpha"],
        "summary": "Get providers",
        "description": "Provides a list of providers",
        "operationId": "providers_get_v3_providers_get",
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ProvidersSortFields"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The field by which to order results",
              "examples": ["order_by=id"],
              "default": "id",
              "title": "Order By"
            },
            "description": "The field by which to order results"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sort results ascending or descending. Default ASC",
              "examples": ["sort=desc"],
              "default": "asc",
              "title": "Sort Order"
            },
            "description": "Sort results ascending or descending. Default ASC"
          },
          {
            "name": "parameters_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parameters Id"
            }
          },
          {
            "name": "monitor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Is the location considered a reference monitor?",
              "title": "Monitor"
            },
            "description": "Is the location considered a reference monitor?"
          },
          {
            "name": "iso",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit the results to a specific country using ISO 3166-1 alpha-2 code",
              "examples": ["US"],
              "title": "Iso"
            },
            "description": "Limit the results to a specific country using ISO 3166-1 alpha-2 code"
          },
          {
            "name": "countries_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit the results to a specific country or countries by country ID as a single country ID or a comma delimited list of IDs",
              "examples": ["1", "1,2,3"],
              "title": "Countries Id"
            },
            "description": "Limit the results to a specific country or countries by country ID as a single country ID or a comma delimited list of IDs"
          },
          {
            "name": "bbox",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "geospatial bounding box of Min X, min Y, max X, max Y in WGS 84 coordinates. Up to 4 decimal points of precision, addtional decimal precision will be truncated to 4 decimal points precision e.g. -77.037,38.907,-77.0,39.910",
              "examples": ["-77.1200,38.7916,-76.9094,38.9955"],
              "title": "Bbox"
            },
            "description": "geospatial bounding box of Min X, min Y, max X, max Y in WGS 84 coordinates. Up to 4 decimal points of precision, addtional decimal precision will be truncated to 4 decimal points precision e.g. -77.037,38.907,-77.0,39.910"
          },
          {
            "name": "coordinates",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "WGS 84 Coordinate pair in form latitude,longitude. Supports up to 4 decimal points of precision, additional decimal precision will be truncated in the query e.g. 38.9074,-77.0373",
              "examples": ["38.907,-77.037"],
              "title": "Coordinates"
            },
            "description": "WGS 84 Coordinate pair in form latitude,longitude. Supports up to 4 decimal points of precision, additional decimal precision will be truncated in the query e.g. 38.9074,-77.0373"
          },
          {
            "name": "radius",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 25000,
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search radius from coordinates as center in meters. Maximum of 25,000 (25km) defaults to 1000 (1km) e.g. radius=1000",
              "examples": ["1000"],
              "title": "Radius"
            },
            "description": "Search radius from coordinates as center in meters. Maximum of 25,000 (25km) defaults to 1000 (1km) e.g. radius=1000"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Change the number of results returned.\n        e.g. limit=100 will return up to 100 results",
              "examples": ["100"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Change the number of results returned.\n        e.g. limit=100 will return up to 100 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProvidersResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v3/sensors/{sensors_id}/measurements": {
      "get": {
        "tags": ["v3-alpha"],
        "summary": "Get measurements by sensor ID",
        "description": "Provides a list of measurements by sensor ID",
        "operationId": "sensor_measurements_get_v3_sensors__sensors_id__measurements_get",
        "parameters": [
          {
            "name": "sensors_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Limit the results to a specific sensors id",
              "title": "Sensors Id"
            },
            "description": "Limit the results to a specific sensors id"
          },
          {
            "name": "period_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PeriodNames"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Period to aggregate. Month, day, hour, hour of day (hod), day of week (dow) and month of year (moy)",
              "default": "hour",
              "title": "Period Name"
            },
            "description": "Period to aggregate. Month, day, hour, hour of day (hod), day of week (dow) and month of year (moy)"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "To when?",
              "examples": ["2022-10-01T11:19:38-06:00", "2022-10-01"],
              "title": "Date To"
            },
            "description": "To when?"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "From when?",
              "examples": ["2022-10-01T11:19:38-06:00", "2022-10-01"],
              "title": "Date From"
            },
            "description": "From when?"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Change the number of results returned.\n        e.g. limit=100 will return up to 100 results",
              "examples": ["100"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Change the number of results returned.\n        e.g. limit=100 will return up to 100 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openaq_api__v3__models__responses__MeasurementsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v3/locations/{locations_id}/sensors": {
      "get": {
        "tags": ["v3-alpha"],
        "summary": "Get sensors by location ID",
        "description": "Provides a list of sensors by location ID",
        "operationId": "sensors_get_v3_locations__locations_id__sensors_get",
        "parameters": [
          {
            "name": "locations_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Limit the results to a specific sensors id",
              "title": "Locations Id"
            },
            "description": "Limit the results to a specific sensors id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SensorsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v3/sensors/{sensors_id}": {
      "get": {
        "tags": ["v3-alpha"],
        "summary": "Get a sensor by ID",
        "description": "Provides a sensor by sensor ID",
        "operationId": "sensor_get_v3_sensors__sensors_id__get",
        "parameters": [
          {
            "name": "sensors_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Limit the results to a specific sensors id",
              "title": "Sensors Id"
            },
            "description": "Limit the results to a specific sensors id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SensorsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/averages": {
      "get": {
        "tags": ["v2"],
        "summary": "Get averaged values",
        "operationId": "averages_v2_get_v2_averages_get",
        "parameters": [
          {
            "name": "temporal",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PeriodNames"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Period to aggregate. month, day, hour",
              "default": "hour",
              "title": "Temporal"
            },
            "description": "Period to aggregate. month, day, hour"
          },
          {
            "name": "parameters_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "What measurand would you like?",
              "title": "Parameters Id"
            },
            "description": "What measurand would you like?"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "To when?",
              "examples": ["2022-10-01T11:19:38-06:00", "2022-10-01"],
              "title": "Date To"
            },
            "description": "To when?"
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "From when?",
              "examples": ["2022-10-01T11:19:38-06:00", "2022-10-01"],
              "title": "Date From"
            },
            "description": "From when?"
          },
          {
            "name": "locations_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the results to a specific location by id",
              "default": 70084,
              "title": "Locations Id"
            },
            "description": "Limit the results to a specific location by id"
          },
          {
            "name": "spatial",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SpatialTypes"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Define how you want to aggregate in space",
              "default": "location",
              "title": "Spatial"
            },
            "description": "Define how you want to aggregate in space"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Change the number of results returned.\n        e.g. limit=100 will return up to 100 results",
              "examples": ["100"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Change the number of results returned.\n        e.g. limit=100 will return up to 100 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AveragesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/cities": {
      "get": {
        "tags": ["v2"],
        "summary": "Get cities",
        "description": "Provides a list of cities supported by the platform",
        "operationId": "cities_get_v2_cities_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results",
              "examples": ["1000"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Sort"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Define sort order. e.g. ?sort=asc",
              "default": "asc",
              "title": "Sort"
            },
            "description": "Define sort order. e.g. ?sort=asc"
          },
          {
            "name": "country_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit results by a certain country using two digit country ID. e.g. 13",
              "examples": [13],
              "title": "Country Id"
            },
            "description": "Limit results by a certain country using two digit country ID. e.g. 13"
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit results by a certain country using two letter country code. e.g. ?country=US or ?country=US&country=MX",
              "examples": ["US"],
              "title": "Country"
            },
            "description": "Limit results by a certain country using two letter country code. e.g. ?country=US or ?country=US&country=MX"
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit results by a certain city or cities. (e.g. ?city=Chicago or ?city=Chicago&city=Boston)",
              "examples": ["Chicago"],
              "title": "City"
            },
            "description": "Limit results by a certain city or cities. (e.g. ?city=Chicago or ?city=Chicago&city=Boston)"
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CitiesOrder"
                }
              ],
              "description": "Order by a field e.g. ?order_by=city",
              "examples": ["city"],
              "default": "city",
              "title": "Order By"
            },
            "description": "Order by a field e.g. ?order_by=city"
          },
          {
            "name": "entity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Entity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CitiesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/cities": {
      "get": {
        "tags": ["v1"],
        "summary": "Get cities",
        "description": "Provides a list of cities supported by the platform",
        "operationId": "cities_getv1_v1_cities_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results",
              "examples": ["1000"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Sort"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Define sort order. e.g. ?sort=asc",
              "default": "asc",
              "title": "Sort"
            },
            "description": "Define sort order. e.g. ?sort=asc"
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CitiesOrderV1"
                }
              ],
              "description": "Order by a field e.g. ?order_by=city",
              "examples": ["city"],
              "default": "city",
              "title": "Order By"
            },
            "description": "Order by a field e.g. ?order_by=city"
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit results by a certain country using two letter country code. e.g. ?country=US or ?country=US&country=MX",
              "examples": ["US"],
              "title": "Country"
            },
            "description": "Limit results by a certain country using two letter country code. e.g. ?country=US or ?country=US&country=MX"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CitiesResponseV1"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/countries/{country_id}": {
      "get": {
        "tags": ["v2"],
        "summary": "Get country by ID",
        "description": "Provides a single country by country ID",
        "operationId": "countries_by_path_v2_countries__country_id__get",
        "parameters": [
          {
            "name": "country_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Country Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the number of results returned. e.g. limit=100 will return up to 100 results",
              "examples": ["100"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Limit the number of results returned. e.g. limit=100 will return up to 100 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Sort"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Define sort order. e.g. ?sort=asc",
              "default": "asc",
              "title": "Sort"
            },
            "description": "Define sort order. e.g. ?sort=asc"
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CountriesOrder"
                }
              ],
              "description": "Order by a field e.g. ?order_by=name",
              "examples": ["name"],
              "default": "name",
              "title": "Order By"
            },
            "description": "Order by a field e.g. ?order_by=name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openaq_api__models__responses__CountriesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/countries/{country_id}": {
      "get": {
        "tags": ["v1"],
        "summary": "Get country by ID",
        "description": "Provides a single country by country ID",
        "operationId": "countries_by_path_v1_countries__country_id__get",
        "parameters": [
          {
            "name": "country_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Country Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the number of results returned. e.g. limit=100 will return up to 100 results",
              "examples": ["100"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Limit the number of results returned. e.g. limit=100 will return up to 100 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Sort"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Define sort order. e.g. ?sort=asc",
              "default": "asc",
              "title": "Sort"
            },
            "description": "Define sort order. e.g. ?sort=asc"
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CountriesOrder"
                }
              ],
              "description": "Order by a field e.g. ?order_by=name",
              "examples": ["name"],
              "default": "name",
              "title": "Order By"
            },
            "description": "Order by a field e.g. ?order_by=name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openaq_api__models__responses__CountriesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/countries": {
      "get": {
        "tags": ["v2"],
        "summary": "Get countries",
        "description": "Provides a list of countries",
        "operationId": "countries_get_v2_countries_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Sort"
                },
                {
                  "type": "null"
                }
              ],
              "default": "asc",
              "title": "Sort"
            }
          },
          {
            "name": "country_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Country Id"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CountriesOrder"
                }
              ],
              "default": "name",
              "title": "Order By"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Country"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openaq_api__models__responses__CountriesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/countries": {
      "get": {
        "tags": ["v1"],
        "summary": "Get countries",
        "description": "Providecs a list of countries",
        "operationId": "countries_getv1_v1_countries_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Sort"
                },
                {
                  "type": "null"
                }
              ],
              "default": "asc",
              "title": "Sort"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CountriesOrderV1"
                }
              ],
              "default": "code",
              "title": "Order By"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountriesResponseV1"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}": {
      "get": {
        "tags": ["v2"],
        "summary": "Get a location by ID",
        "description": "Provides a location by location ID",
        "operationId": "get_v2_location_by_id_v2_locations__location_id__get",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the location",
              "title": "Location Id"
            },
            "description": "The ID of the location"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results",
              "examples": ["1000"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Sort"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Define sort order. e.g. ?sort=asc",
              "default": "asc",
              "title": "Sort"
            },
            "description": "Define sort order. e.g. ?sort=asc"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openaq_api__models__responses__LocationsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/locations": {
      "get": {
        "tags": ["v2"],
        "summary": "Get locations",
        "description": "Provides a list of locations",
        "operationId": "locations_get_v2_locations_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results",
              "examples": ["1000"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Sort"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sort Direction e.g. sort=desc",
              "examples": ["desc"],
              "default": "desc",
              "title": "Sort"
            },
            "description": "Sort Direction e.g. sort=desc"
          },
          {
            "name": "parameter_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "(optional) A parameter ID to filter measurement results. e.g. parameter_id=2 (i.e. PM2.5) will limit measurement results to only PM2.5 measurements",
              "examples": ["2"],
              "title": "Parameter Id"
            },
            "description": "(optional) A parameter ID to filter measurement results. e.g. parameter_id=2 (i.e. PM2.5) will limit measurement results to only PM2.5 measurements"
          },
          {
            "name": "parameter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "(optional) A parameter name or ID by which to filter measurement results. e.g. parameter=pm25 or parameter=pm25&parameter=pm10",
              "examples": ["pm25"],
              "title": "Parameter"
            },
            "description": "(optional) A parameter name or ID by which to filter measurement results. e.g. parameter=pm25 or parameter=pm25&parameter=pm10"
          },
          {
            "name": "unit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Unit"
            }
          },
          {
            "name": "coordinates",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Coordinate pair in form lat,lng. Up to 8 decimal points of precision e.g. 38.907,-77.037",
              "examples": ["38.907,-77.037"],
              "title": "Coordinates"
            },
            "description": "Coordinate pair in form lat,lng. Up to 8 decimal points of precision e.g. 38.907,-77.037"
          },
          {
            "name": "radius",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Search radius from coordinates as center in meters. Maximum of 25,000 (25km) defaults to 1000 (1km) e.g. radius=10000",
              "examples": ["10000"],
              "default": 1000,
              "title": "Radius"
            },
            "description": "Search radius from coordinates as center in meters. Maximum of 25,000 (25km) defaults to 1000 (1km) e.g. radius=10000"
          },
          {
            "name": "country_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit results by a certain country using two digit country ID. e.g. 13",
              "examples": [13],
              "title": "Country Id"
            },
            "description": "Limit results by a certain country using two digit country ID. e.g. 13"
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit results by a certain country using two letter country code. e.g. ?country=US or ?country=US&country=MX",
              "examples": ["US"],
              "title": "Country"
            },
            "description": "Limit results by a certain country using two letter country code. e.g. ?country=US or ?country=US&country=MX"
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit results by a certain city or cities. (e.g. ?city=Chicago or ?city=Chicago&city=Boston)",
              "examples": ["Chicago"],
              "title": "City"
            },
            "description": "Limit results by a certain city or cities. (e.g. ?city=Chicago or ?city=Chicago&city=Boston)"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location Id"
            }
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LocationsOrder"
                }
              ],
              "description": "Order by a field",
              "default": "lastUpdated",
              "title": "Order By"
            },
            "description": "Order by a field"
          },
          {
            "name": "is_mobile",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Location is mobile e.g. ?isMobile=true",
              "examples": ["true"],
              "title": "Is Mobile"
            },
            "description": "Location is mobile e.g. ?isMobile=true"
          },
          {
            "name": "is_analysis",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Data is the product of a previous analysis/aggregation and not raw measurements e.g. ?isAnalysis=true ",
              "examples": ["true"],
              "title": "Is Analysis"
            },
            "description": "Data is the product of a previous analysis/aggregation and not raw measurements e.g. ?isAnalysis=true "
          },
          {
            "name": "source_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Name of the data source e.g. ?sourceName=Houston%20Mobile",
              "examples": ["Houston%20Mobile"],
              "title": "Source Name"
            },
            "description": "Name of the data source e.g. ?sourceName=Houston%20Mobile"
          },
          {
            "name": "entity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/EntityTypes"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Source entity type. e.g. ?entity=government",
              "examples": ["government"],
              "title": "Entity"
            },
            "description": "Source entity type. e.g. ?entity=government"
          },
          {
            "name": "sensor_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SensorTypes"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Type of Sensor e.g. ?sensorType=reference%20grade",
              "examples": ["reference%20grade"],
              "title": "Sensor Type"
            },
            "description": "Type of Sensor e.g. ?sensorType=reference%20grade"
          },
          {
            "name": "model_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Model Name of Sensor e.g. ?modelName=AE33",
              "examples": ["AE33"],
              "title": "Model Name"
            },
            "description": "Model Name of Sensor e.g. ?modelName=AE33"
          },
          {
            "name": "manufacturer_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Manufacturer of Sensor e.g. ?manufacturer=Ecotech",
              "examples": ["Ecotech"],
              "title": "Manufacturer Name"
            },
            "description": "Manufacturer of Sensor e.g. ?manufacturer=Ecotech"
          },
          {
            "name": "dump_raw",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": false,
              "title": "Dump Raw"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openaq_api__models__responses__LocationsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/latest/{location_id}": {
      "get": {
        "tags": ["v2"],
        "summary": "Get latest measurements by location ID",
        "description": "Provides latest measurements for a locations by location ID",
        "operationId": "get_v2_latest_by_id_v2_latest__location_id__get",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the location",
              "title": "Location Id"
            },
            "description": "The ID of the location"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results",
              "examples": ["1000"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Sort"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Define sort order. e.g. ?sort=asc",
              "default": "asc",
              "title": "Sort"
            },
            "description": "Define sort order. e.g. ?sort=asc"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LatestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/latest": {
      "get": {
        "tags": ["v2"],
        "summary": "Get latest measurements",
        "description": "Provides a list of locations with latest measurements",
        "operationId": "latest_get_v2_latest_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Sort"
                },
                {
                  "type": "null"
                }
              ],
              "default": "desc",
              "title": "Sort"
            }
          },
          {
            "name": "parameter_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parameter Id"
            }
          },
          {
            "name": "coordinates",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Coordinates"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1000,
              "title": "Radius"
            }
          },
          {
            "name": "country_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Country Id"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LocationsOrder"
                }
              ],
              "default": "lastUpdated",
              "title": "Order By"
            }
          },
          {
            "name": "is_mobile",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Mobile"
            }
          },
          {
            "name": "is_analysis",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Analysis"
            }
          },
          {
            "name": "entity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/EntityTypes"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Entity"
            }
          },
          {
            "name": "sensor_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SensorTypes"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sensor Type"
            }
          },
          {
            "name": "dump_raw",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": false,
              "title": "Dump Raw"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Body_latest_get_v2_latest_get"
                  }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LatestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/latest/{location_id}": {
      "get": {
        "tags": ["v1"],
        "summary": "Get latest measurements by location ID",
        "operationId": "get_v1_latest_by_id_v1_latest__location_id__get",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the location",
              "title": "Location Id"
            },
            "description": "The ID of the location"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results",
              "examples": ["1000"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Sort"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Define sort order. e.g. ?sort=asc",
              "default": "asc",
              "title": "Sort"
            },
            "description": "Define sort order. e.g. ?sort=asc"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LatestResponseV1"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/latest": {
      "get": {
        "tags": ["v1"],
        "summary": "Get latest measurements",
        "operationId": "latest_v1_get_v1_latest_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results",
              "examples": ["1000"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Sort"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sort Direction e.g. sort=desc",
              "examples": ["desc"],
              "default": "desc",
              "title": "Sort"
            },
            "description": "Sort Direction e.g. sort=desc"
          },
          {
            "name": "parameter_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "(optional) A parameter ID to filter measurement results. e.g. parameter_id=2 (i.e. PM2.5) will limit measurement results to only PM2.5 measurements",
              "examples": ["2"],
              "title": "Parameter Id"
            },
            "description": "(optional) A parameter ID to filter measurement results. e.g. parameter_id=2 (i.e. PM2.5) will limit measurement results to only PM2.5 measurements"
          },
          {
            "name": "parameter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "(optional) A parameter name or ID by which to filter measurement results. e.g. parameter=pm25 or parameter=pm25&parameter=pm10",
              "examples": ["pm25"],
              "title": "Parameter"
            },
            "description": "(optional) A parameter name or ID by which to filter measurement results. e.g. parameter=pm25 or parameter=pm25&parameter=pm10"
          },
          {
            "name": "unit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Unit"
            }
          },
          {
            "name": "coordinates",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Coordinate pair in form lat,lng. Up to 8 decimal points of precision e.g. 38.907,-77.037",
              "examples": ["38.907,-77.037"],
              "title": "Coordinates"
            },
            "description": "Coordinate pair in form lat,lng. Up to 8 decimal points of precision e.g. 38.907,-77.037"
          },
          {
            "name": "radius",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Search radius from coordinates as center in meters. Maximum of 25,000 (25km) defaults to 1000 (1km) e.g. radius=10000",
              "examples": ["10000"],
              "default": 1000,
              "title": "Radius"
            },
            "description": "Search radius from coordinates as center in meters. Maximum of 25,000 (25km) defaults to 1000 (1km) e.g. radius=10000"
          },
          {
            "name": "country_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit results by a certain country using two digit country ID. e.g. 13",
              "examples": [13],
              "title": "Country Id"
            },
            "description": "Limit results by a certain country using two digit country ID. e.g. 13"
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit results by a certain country using two letter country code. e.g. ?country=US or ?country=US&country=MX",
              "examples": ["US"],
              "title": "Country"
            },
            "description": "Limit results by a certain country using two letter country code. e.g. ?country=US or ?country=US&country=MX"
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit results by a certain city or cities. (e.g. ?city=Chicago or ?city=Chicago&city=Boston)",
              "examples": ["Chicago"],
              "title": "City"
            },
            "description": "Limit results by a certain city or cities. (e.g. ?city=Chicago or ?city=Chicago&city=Boston)"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location Id"
            }
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LocationsOrder"
                }
              ],
              "description": "Order by a field",
              "default": "lastUpdated",
              "title": "Order By"
            },
            "description": "Order by a field"
          },
          {
            "name": "is_mobile",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Location is mobile e.g. ?isMobile=true",
              "examples": ["true"],
              "title": "Is Mobile"
            },
            "description": "Location is mobile e.g. ?isMobile=true"
          },
          {
            "name": "is_analysis",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Data is the product of a previous analysis/aggregation and not raw measurements e.g. ?isAnalysis=true ",
              "examples": ["true"],
              "title": "Is Analysis"
            },
            "description": "Data is the product of a previous analysis/aggregation and not raw measurements e.g. ?isAnalysis=true "
          },
          {
            "name": "source_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Name of the data source e.g. ?sourceName=Houston%20Mobile",
              "examples": ["Houston%20Mobile"],
              "title": "Source Name"
            },
            "description": "Name of the data source e.g. ?sourceName=Houston%20Mobile"
          },
          {
            "name": "entity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/EntityTypes"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Source entity type. e.g. ?entity=government",
              "examples": ["government"],
              "title": "Entity"
            },
            "description": "Source entity type. e.g. ?entity=government"
          },
          {
            "name": "sensor_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SensorTypes"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Type of Sensor e.g. ?sensorType=reference%20grade",
              "examples": ["reference%20grade"],
              "title": "Sensor Type"
            },
            "description": "Type of Sensor e.g. ?sensorType=reference%20grade"
          },
          {
            "name": "model_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Model Name of Sensor e.g. ?modelName=AE33",
              "examples": ["AE33"],
              "title": "Model Name"
            },
            "description": "Model Name of Sensor e.g. ?modelName=AE33"
          },
          {
            "name": "manufacturer_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Manufacturer of Sensor e.g. ?manufacturer=Ecotech",
              "examples": ["Ecotech"],
              "title": "Manufacturer Name"
            },
            "description": "Manufacturer of Sensor e.g. ?manufacturer=Ecotech"
          },
          {
            "name": "dump_raw",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": false,
              "title": "Dump Raw"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LatestResponseV1"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/locations/{location_id}": {
      "get": {
        "tags": ["v1"],
        "summary": "Get location by ID",
        "operationId": "get_v1_locations_by_id_v1_locations__location_id__get",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the location",
              "title": "Location Id"
            },
            "description": "The ID of the location"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results",
              "examples": ["1000"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Sort"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Define sort order. e.g. ?sort=asc",
              "default": "asc",
              "title": "Sort"
            },
            "description": "Define sort order. e.g. ?sort=asc"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationsResponseV1"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/locations": {
      "get": {
        "tags": ["v1"],
        "summary": "Get locations",
        "operationId": "locationsv1_get_v1_locations_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results",
              "examples": ["1000"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Sort"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sort Direction e.g. sort=desc",
              "examples": ["desc"],
              "default": "desc",
              "title": "Sort"
            },
            "description": "Sort Direction e.g. sort=desc"
          },
          {
            "name": "parameter_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "(optional) A parameter ID to filter measurement results. e.g. parameter_id=2 (i.e. PM2.5) will limit measurement results to only PM2.5 measurements",
              "examples": ["2"],
              "title": "Parameter Id"
            },
            "description": "(optional) A parameter ID to filter measurement results. e.g. parameter_id=2 (i.e. PM2.5) will limit measurement results to only PM2.5 measurements"
          },
          {
            "name": "parameter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "(optional) A parameter name or ID by which to filter measurement results. e.g. parameter=pm25 or parameter=pm25&parameter=pm10",
              "examples": ["pm25"],
              "title": "Parameter"
            },
            "description": "(optional) A parameter name or ID by which to filter measurement results. e.g. parameter=pm25 or parameter=pm25&parameter=pm10"
          },
          {
            "name": "unit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Unit"
            }
          },
          {
            "name": "coordinates",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Coordinate pair in form lat,lng. Up to 8 decimal points of precision e.g. 38.907,-77.037",
              "examples": ["38.907,-77.037"],
              "title": "Coordinates"
            },
            "description": "Coordinate pair in form lat,lng. Up to 8 decimal points of precision e.g. 38.907,-77.037"
          },
          {
            "name": "radius",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Search radius from coordinates as center in meters. Maximum of 25,000 (25km) defaults to 1000 (1km) e.g. radius=10000",
              "examples": ["10000"],
              "default": 1000,
              "title": "Radius"
            },
            "description": "Search radius from coordinates as center in meters. Maximum of 25,000 (25km) defaults to 1000 (1km) e.g. radius=10000"
          },
          {
            "name": "country_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit results by a certain country using two digit country ID. e.g. 13",
              "examples": [13],
              "title": "Country Id"
            },
            "description": "Limit results by a certain country using two digit country ID. e.g. 13"
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit results by a certain country using two letter country code. e.g. ?country=US or ?country=US&country=MX",
              "examples": ["US"],
              "title": "Country"
            },
            "description": "Limit results by a certain country using two letter country code. e.g. ?country=US or ?country=US&country=MX"
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit results by a certain city or cities. (e.g. ?city=Chicago or ?city=Chicago&city=Boston)",
              "examples": ["Chicago"],
              "title": "City"
            },
            "description": "Limit results by a certain city or cities. (e.g. ?city=Chicago or ?city=Chicago&city=Boston)"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location Id"
            }
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LocationsOrder"
                }
              ],
              "description": "Order by a field",
              "default": "lastUpdated",
              "title": "Order By"
            },
            "description": "Order by a field"
          },
          {
            "name": "is_mobile",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Location is mobile e.g. ?isMobile=true",
              "examples": ["true"],
              "title": "Is Mobile"
            },
            "description": "Location is mobile e.g. ?isMobile=true"
          },
          {
            "name": "is_analysis",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Data is the product of a previous analysis/aggregation and not raw measurements e.g. ?isAnalysis=true ",
              "examples": ["true"],
              "title": "Is Analysis"
            },
            "description": "Data is the product of a previous analysis/aggregation and not raw measurements e.g. ?isAnalysis=true "
          },
          {
            "name": "source_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Name of the data source e.g. ?sourceName=Houston%20Mobile",
              "examples": ["Houston%20Mobile"],
              "title": "Source Name"
            },
            "description": "Name of the data source e.g. ?sourceName=Houston%20Mobile"
          },
          {
            "name": "entity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/EntityTypes"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Source entity type. e.g. ?entity=government",
              "examples": ["government"],
              "title": "Entity"
            },
            "description": "Source entity type. e.g. ?entity=government"
          },
          {
            "name": "sensor_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SensorTypes"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Type of Sensor e.g. ?sensorType=reference%20grade",
              "examples": ["reference%20grade"],
              "title": "Sensor Type"
            },
            "description": "Type of Sensor e.g. ?sensorType=reference%20grade"
          },
          {
            "name": "model_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Model Name of Sensor e.g. ?modelName=AE33",
              "examples": ["AE33"],
              "title": "Model Name"
            },
            "description": "Model Name of Sensor e.g. ?modelName=AE33"
          },
          {
            "name": "manufacturer_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Manufacturer of Sensor e.g. ?manufacturer=Ecotech",
              "examples": ["Ecotech"],
              "title": "Manufacturer Name"
            },
            "description": "Manufacturer of Sensor e.g. ?manufacturer=Ecotech"
          },
          {
            "name": "dump_raw",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": false,
              "title": "Dump Raw"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationsResponseV1"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/measurements": {
      "get": {
        "tags": ["v2"],
        "summary": "Get measurements",
        "operationId": "measurements_get_v2_measurements_get",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Format"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "From when?",
              "examples": ["2022-10-01T11:19:38-06:00", "2022-10-01"],
              "default": "2024-05-30T00:00:00Z",
              "title": "Date From"
            },
            "description": "From when?"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "to when?",
              "examples": ["2022-10-01T11:19:38-06:00", "2022-10-01"],
              "default": "2024-06-06T20:45:00Z",
              "title": "Date To"
            },
            "description": "to when?"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results",
              "examples": ["1000"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Sort"
                }
              ],
              "default": "desc",
              "title": "Sort"
            }
          },
          {
            "name": "has_geo",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Geo"
            }
          },
          {
            "name": "parameter_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "(optional) A parameter ID to filter measurement results. e.g. parameter_id=2 (i.e. PM2.5) will limit measurement results to only PM2.5 measurements",
              "examples": ["2"],
              "title": "Parameter Id"
            },
            "description": "(optional) A parameter ID to filter measurement results. e.g. parameter_id=2 (i.e. PM2.5) will limit measurement results to only PM2.5 measurements"
          },
          {
            "name": "parameter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "(optional) A parameter name or ID by which to filter measurement results. e.g. parameter=pm25 or parameter=pm25&parameter=pm10",
              "examples": ["pm25"],
              "title": "Parameter"
            },
            "description": "(optional) A parameter name or ID by which to filter measurement results. e.g. parameter=pm25 or parameter=pm25&parameter=pm10"
          },
          {
            "name": "unit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Unit"
            }
          },
          {
            "name": "coordinates",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Coordinate pair in form lat,lng. Up to 8 decimal points of precision e.g. 38.907,-77.037",
              "examples": ["38.907,-77.037"],
              "title": "Coordinates"
            },
            "description": "Coordinate pair in form lat,lng. Up to 8 decimal points of precision e.g. 38.907,-77.037"
          },
          {
            "name": "radius",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Search radius from coordinates as center in meters. Maximum of 25,000 (25km) defaults to 1000 (1km) e.g. radius=10000",
              "examples": ["10000"],
              "default": 1000,
              "title": "Radius"
            },
            "description": "Search radius from coordinates as center in meters. Maximum of 25,000 (25km) defaults to 1000 (1km) e.g. radius=10000"
          },
          {
            "name": "country_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit results by a certain country using two digit country ID. e.g. 13",
              "examples": [13],
              "title": "Country Id"
            },
            "description": "Limit results by a certain country using two digit country ID. e.g. 13"
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit results by a certain country using two letter country code. e.g. ?country=US or ?country=US&country=MX",
              "examples": ["US"],
              "title": "Country"
            },
            "description": "Limit results by a certain country using two letter country code. e.g. ?country=US or ?country=US&country=MX"
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit results by a certain city or cities. (e.g. ?city=Chicago or ?city=Chicago&city=Boston)",
              "examples": ["Chicago"],
              "title": "City"
            },
            "description": "Limit results by a certain city or cities. (e.g. ?city=Chicago or ?city=Chicago&city=Boston)"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location Id"
            }
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MeasOrder"
                }
              ],
              "default": "datetime",
              "title": "Order By"
            }
          },
          {
            "name": "is_mobile",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Location is mobile e.g. ?isMobile=true",
              "examples": ["true"],
              "title": "Is Mobile"
            },
            "description": "Location is mobile e.g. ?isMobile=true"
          },
          {
            "name": "is_analysis",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Data is the product of a previous analysis/aggregation and not raw measurements e.g. ?isAnalysis=false",
              "examples": ["true"],
              "title": "Is Analysis"
            },
            "description": "Data is the product of a previous analysis/aggregation and not raw measurements e.g. ?isAnalysis=false"
          },
          {
            "name": "project",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Project"
            }
          },
          {
            "name": "entity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/EntityTypes"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Entity"
            }
          },
          {
            "name": "sensor_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SensorTypes"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by sensor type (i,e. reference grade, low-cost sensor) e.g. ?sensorType=reference%20grade",
              "examples": ["reference%20grade"],
              "title": "Sensor Type"
            },
            "description": "Filter by sensor type (i,e. reference grade, low-cost sensor) e.g. ?sensorType=reference%20grade"
          },
          {
            "name": "value_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Value From"
            }
          },
          {
            "name": "value_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Value To"
            }
          },
          {
            "name": "include_fields",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Additional fields to include in response e.g. ?include_fields=sourceName",
              "examples": ["sourceName"],
              "title": "Include Fields"
            },
            "description": "Additional fields to include in response e.g. ?include_fields=sourceName"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openaq_api__models__responses__MeasurementsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/measurements": {
      "get": {
        "tags": ["v1"],
        "summary": "Get a list of measurements",
        "operationId": "measurements_get_v1_v1_measurements_get",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Format"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "From when?",
              "examples": ["2022-10-01T11:19:38-06:00", "2022-10-01"],
              "default": "2024-05-30T00:00:00Z",
              "title": "Date From"
            },
            "description": "From when?"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "to when?",
              "examples": ["2022-10-01T11:19:38-06:00", "2022-10-01"],
              "default": "2024-06-06T20:45:00Z",
              "title": "Date To"
            },
            "description": "to when?"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results",
              "examples": ["1000"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Sort"
                }
              ],
              "default": "desc",
              "title": "Sort"
            }
          },
          {
            "name": "has_geo",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Geo"
            }
          },
          {
            "name": "parameter_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "(optional) A parameter ID to filter measurement results. e.g. parameter_id=2 (i.e. PM2.5) will limit measurement results to only PM2.5 measurements",
              "examples": ["2"],
              "title": "Parameter Id"
            },
            "description": "(optional) A parameter ID to filter measurement results. e.g. parameter_id=2 (i.e. PM2.5) will limit measurement results to only PM2.5 measurements"
          },
          {
            "name": "parameter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "(optional) A parameter name or ID by which to filter measurement results. e.g. parameter=pm25 or parameter=pm25&parameter=pm10",
              "examples": ["pm25"],
              "title": "Parameter"
            },
            "description": "(optional) A parameter name or ID by which to filter measurement results. e.g. parameter=pm25 or parameter=pm25&parameter=pm10"
          },
          {
            "name": "unit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Unit"
            }
          },
          {
            "name": "coordinates",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Coordinate pair in form lat,lng. Up to 8 decimal points of precision e.g. 38.907,-77.037",
              "examples": ["38.907,-77.037"],
              "title": "Coordinates"
            },
            "description": "Coordinate pair in form lat,lng. Up to 8 decimal points of precision e.g. 38.907,-77.037"
          },
          {
            "name": "radius",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Search radius from coordinates as center in meters. Maximum of 25,000 (25km) defaults to 1000 (1km) e.g. radius=10000",
              "examples": ["10000"],
              "default": 1000,
              "title": "Radius"
            },
            "description": "Search radius from coordinates as center in meters. Maximum of 25,000 (25km) defaults to 1000 (1km) e.g. radius=10000"
          },
          {
            "name": "country_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit results by a certain country using two digit country ID. e.g. 13",
              "examples": [13],
              "title": "Country Id"
            },
            "description": "Limit results by a certain country using two digit country ID. e.g. 13"
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit results by a certain country using two letter country code. e.g. ?country=US or ?country=US&country=MX",
              "examples": ["US"],
              "title": "Country"
            },
            "description": "Limit results by a certain country using two letter country code. e.g. ?country=US or ?country=US&country=MX"
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit results by a certain city or cities. (e.g. ?city=Chicago or ?city=Chicago&city=Boston)",
              "examples": ["Chicago"],
              "title": "City"
            },
            "description": "Limit results by a certain city or cities. (e.g. ?city=Chicago or ?city=Chicago&city=Boston)"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location Id"
            }
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MeasOrder"
                }
              ],
              "default": "datetime",
              "title": "Order By"
            }
          },
          {
            "name": "is_mobile",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Location is mobile e.g. ?isMobile=true",
              "examples": ["true"],
              "title": "Is Mobile"
            },
            "description": "Location is mobile e.g. ?isMobile=true"
          },
          {
            "name": "is_analysis",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Data is the product of a previous analysis/aggregation and not raw measurements e.g. ?isAnalysis=false",
              "examples": ["true"],
              "title": "Is Analysis"
            },
            "description": "Data is the product of a previous analysis/aggregation and not raw measurements e.g. ?isAnalysis=false"
          },
          {
            "name": "project",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Project"
            }
          },
          {
            "name": "entity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/EntityTypes"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Entity"
            }
          },
          {
            "name": "sensor_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SensorTypes"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by sensor type (i,e. reference grade, low-cost sensor) e.g. ?sensorType=reference%20grade",
              "examples": ["reference%20grade"],
              "title": "Sensor Type"
            },
            "description": "Filter by sensor type (i,e. reference grade, low-cost sensor) e.g. ?sensorType=reference%20grade"
          },
          {
            "name": "value_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Value From"
            }
          },
          {
            "name": "value_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Value To"
            }
          },
          {
            "name": "include_fields",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Additional fields to include in response e.g. ?include_fields=sourceName",
              "examples": ["sourceName"],
              "title": "Include Fields"
            },
            "description": "Additional fields to include in response e.g. ?include_fields=sourceName"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementsResponseV1"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/parameters": {
      "get": {
        "tags": ["v2"],
        "summary": "Get parameters",
        "description": "Provides a list of parameters supported by the platform",
        "operationId": "parameters_get_v2_parameters_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results",
              "examples": ["1000"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Sort"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Define sort order. e.g. ?sort=asc",
              "default": "asc",
              "title": "Sort"
            },
            "description": "Define sort order. e.g. ?sort=asc"
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "enum": ["id", "name", "preferredUnit"],
              "type": "string",
              "default": "id",
              "title": "Order By"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/openaq_api__models__responses__ParametersResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/parameters": {
      "get": {
        "tags": ["v1"],
        "summary": "Get parameters",
        "description": "Provides a list of parameters supported by the platform",
        "operationId": "parameters_getv1_v1_parameters_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results",
              "examples": ["1000"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Sort"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Define sort order. e.g. ?sort=asc",
              "default": "asc",
              "title": "Sort"
            },
            "description": "Define sort order. e.g. ?sort=asc"
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "enum": ["id", "name", "preferredUnit"],
              "type": "string",
              "default": "id",
              "title": "Order By"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParametersResponseV1"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{project_id}": {
      "get": {
        "tags": ["v2"],
        "summary": "Project by ID",
        "description": "Provides a project by project ID",
        "operationId": "projects_get_v2_projects__project_id__get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects": {
      "get": {
        "tags": ["v2"],
        "summary": "Projects",
        "description": "Provides a list of projects",
        "operationId": "projects_get_v2_projects_get",
        "parameters": [
          {
            "name": "country_id",
            "in": "query",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Country Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Offset"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Sort"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit results by a certain country using two digit country ID. e.g. 13",
              "examples": [13],
              "title": "Sort"
            },
            "description": "Limit results by a certain country using two digit country ID. e.g. 13"
          },
          {
            "name": "parameter_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit results by a certain country using two letter country code. e.g. ?country=US or ?country=US&country=MX",
              "examples": ["US"],
              "title": "Parameter Id"
            },
            "description": "Limit results by a certain country using two letter country code. e.g. ?country=US or ?country=US&country=MX"
          },
          {
            "name": "parameter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results",
              "examples": ["1000"],
              "default": 100,
              "title": "Parameter"
            },
            "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results"
          },
          {
            "name": "unit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Unit"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          },
          {
            "name": "project_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Project Id"
            }
          },
          {
            "name": "project",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Define sort order. e.g. ?sort=asc",
              "default": "asc",
              "title": "Project"
            },
            "description": "Define sort order. e.g. ?sort=asc"
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ProjectsOrder"
                }
              ],
              "description": "(optional) A parameter ID to filter measurement results. e.g. parameter_id=2 (i.e. PM2.5) will limit measurement results to only PM2.5 measurements",
              "examples": ["2"],
              "title": "Order By"
            },
            "description": "(optional) A parameter ID to filter measurement results. e.g. parameter_id=2 (i.e. PM2.5) will limit measurement results to only PM2.5 measurements"
          },
          {
            "name": "is_mobile",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "(optional) A parameter name or ID by which to filter measurement results. e.g. parameter=pm25 or parameter=pm25&parameter=pm10",
              "examples": ["pm25"],
              "title": "Is Mobile"
            },
            "description": "(optional) A parameter name or ID by which to filter measurement results. e.g. parameter=pm25 or parameter=pm25&parameter=pm10"
          },
          {
            "name": "is_analysis",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Analysis"
            }
          },
          {
            "name": "entity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Entity"
            }
          },
          {
            "name": "sensor_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sensor Type"
            }
          },
          {
            "name": "source_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "default": "lastUpdated",
              "title": "Source Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Country"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/sources": {
      "get": {
        "tags": ["v2"],
        "summary": "Sources",
        "description": "Provides a list of sources",
        "operationId": "sources_get_v2_sources_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results",
              "examples": ["1000"],
              "default": 100,
              "title": "Limit"
            },
            "description": "Change the number of results returned. e.g. limit=1000 will return up to 1000 results"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Paginate through results. e.g. page=1 will return first page of results",
              "examples": ["1"],
              "default": 1,
              "title": "Page"
            },
            "description": "Paginate through results. e.g. page=1 will return first page of results"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Sort"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Define sort order. e.g. ?sort=asc",
              "default": "asc",
              "title": "Sort"
            },
            "description": "Define sort order. e.g. ?sort=asc"
          },
          {
            "name": "source_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source Name"
            }
          },
          {
            "name": "source_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source Id"
            }
          },
          {
            "name": "source_slug",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source Slug"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SourcesOrder"
                }
              ],
              "description": "Field by which to order the results e.g. ?order_by=sourceName or ?order_by=firstUpdated",
              "examples": ["sourceName"],
              "default": "sourceName",
              "title": "Order By"
            },
            "description": "Field by which to order the results e.g. ?order_by=sourceName or ?order_by=firstUpdated"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourcesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sources": {
      "get": {
        "tags": ["v1"],
        "summary": "Sources",
        "description": "Provides a list of sources",
        "operationId": "sources_v1_get_v1_sources_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Sort"
                },
                {
                  "type": "null"
                }
              ],
              "default": "asc",
              "title": "Sort"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SourcesV1Order"
                }
              ],
              "default": "name",
              "title": "Order By"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourcesResponseV1"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/sources/readme/{slug}": {
      "get": {
        "tags": ["v2"],
        "summary": "Source Readme",
        "description": "Provides a readme for a given source by the source slug",
        "operationId": "readme_get_v2_sources_readme__slug__get",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "examples": ["london_mobile"],
              "title": "Slug"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/summary": {
      "get": {
        "tags": ["v2"],
        "summary": "Platform Summary",
        "description": "Provides a summary of platform data",
        "operationId": "summary_get_v2_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SummaryResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AveragesResponse": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__models__responses__Meta"
              }
            ],
            "default": {
              "license": "",
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/AveragesRow"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "AveragesResponse"
      },
      "AveragesRow": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "name": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "hour": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hour"
          },
          "day": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Day"
          },
          "month": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Month"
          },
          "year": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Year"
          },
          "hod": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hod"
          },
          "dow": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dow"
          },
          "average": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Average"
          },
          "measurement_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Measurement Count"
          },
          "parameter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameter"
          },
          "parameterId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameterid"
          },
          "displayName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Displayname"
          },
          "unit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit"
          },
          "first_datetime": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Datetime"
          },
          "last_datetime": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Datetime"
          }
        },
        "type": "object",
        "title": "AveragesRow"
      },
      "AveragingPeriodV1": {
        "properties": {
          "value": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "unit": {
            "type": "string",
            "title": "Unit"
          }
        },
        "type": "object",
        "required": ["unit"],
        "title": "AveragingPeriodV1"
      },
      "Body_latest_get_v2_latest_get": {
        "properties": {
          "parameter": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameter"
          },
          "unit": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit"
          },
          "country": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "city": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "location_id": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Id"
          },
          "location": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "source_name": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Name"
          },
          "model_name": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Name"
          },
          "manufacturer_name": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manufacturer Name"
          }
        },
        "type": "object",
        "title": "Body_latest_get_v2_latest_get"
      },
      "CitiesOrder": {
        "type": "string",
        "enum": ["city", "country", "firstUpdated", "lastUpdated"],
        "title": "CitiesOrder"
      },
      "CitiesOrderV1": {
        "type": "string",
        "enum": ["city", "country", "locations", "count"],
        "title": "CitiesOrderV1"
      },
      "CitiesResponse": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__models__responses__Meta"
              }
            ],
            "default": {
              "license": "",
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/CityRow"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "CitiesResponse"
      },
      "CitiesResponseV1": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__models__responses__Meta"
              }
            ],
            "default": {
              "license": "",
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/CityRowV1"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "CitiesResponseV1"
      },
      "CityRow": {
        "properties": {
          "country": {
            "type": "string",
            "title": "Country"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "locations": {
            "type": "integer",
            "title": "Locations"
          },
          "firstUpdated": {
            "type": "string",
            "title": "Firstupdated"
          },
          "lastUpdated": {
            "type": "string",
            "title": "Lastupdated"
          },
          "parameters": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Parameters"
          }
        },
        "type": "object",
        "required": [
          "country",
          "city",
          "count",
          "locations",
          "firstUpdated",
          "lastUpdated",
          "parameters"
        ],
        "title": "CityRow"
      },
      "CityRowV1": {
        "properties": {
          "country": {
            "type": "string",
            "title": "Country"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "locations": {
            "type": "integer",
            "title": "Locations"
          }
        },
        "type": "object",
        "required": ["country", "city", "count", "locations"],
        "title": "CityRowV1"
      },
      "Coordinates": {
        "properties": {
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          }
        },
        "type": "object",
        "title": "Coordinates"
      },
      "CountriesOrder": {
        "type": "string",
        "enum": [
          "code",
          "name",
          "locations",
          "firstUpdated",
          "lastUpdated",
          "parameters",
          "count",
          "cities",
          "sources"
        ],
        "title": "CountriesOrder"
      },
      "CountriesOrderV1": {
        "type": "string",
        "enum": ["code", "count", "locations", "cities", "name"],
        "title": "CountriesOrderV1"
      },
      "CountriesResponseV1": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__models__responses__Meta"
              }
            ],
            "default": {
              "license": "",
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/CountriesRowV1"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "CountriesResponseV1"
      },
      "CountriesRow": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "locations": {
            "type": "integer",
            "title": "Locations"
          },
          "firstUpdated": {
            "type": "string",
            "title": "Firstupdated"
          },
          "lastUpdated": {
            "type": "string",
            "title": "Lastupdated"
          },
          "parameters": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Parameters"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "cities": {
            "type": "integer",
            "title": "Cities"
          },
          "sources": {
            "type": "integer",
            "title": "Sources"
          }
        },
        "type": "object",
        "required": [
          "code",
          "name",
          "locations",
          "firstUpdated",
          "lastUpdated",
          "parameters",
          "count",
          "cities",
          "sources"
        ],
        "title": "CountriesRow"
      },
      "CountriesRowV1": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "locations": {
            "type": "integer",
            "title": "Locations"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "cities": {
            "type": "integer",
            "title": "Cities"
          }
        },
        "type": "object",
        "required": ["code", "name", "locations", "count", "cities"],
        "title": "CountriesRowV1"
      },
      "CountriesSortFields": {
        "type": "string",
        "const": "id",
        "title": "CountriesSortFields"
      },
      "Country": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "code": {
            "type": "string",
            "title": "Code"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "datetimeFirst": {
            "type": "string",
            "format": "date-time",
            "title": "Datetimefirst"
          },
          "datetimeLast": {
            "type": "string",
            "format": "date-time",
            "title": "Datetimelast"
          },
          "parameters": {
            "items": {
              "$ref": "#/components/schemas/ParameterBase"
            },
            "type": "array",
            "title": "Parameters"
          }
        },
        "type": "object",
        "required": [
          "id",
          "code",
          "name",
          "datetimeFirst",
          "datetimeLast",
          "parameters"
        ],
        "title": "Country"
      },
      "CountryBase": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "code": {
            "type": "string",
            "title": "Code"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["code", "name"],
        "title": "CountryBase"
      },
      "CountsByMeasurementItem": {
        "properties": {
          "parameter": {
            "type": "string",
            "title": "Parameter"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": ["parameter", "count"],
        "title": "CountsByMeasurementItem"
      },
      "Coverage": {
        "properties": {
          "expectedCount": {
            "type": "integer",
            "title": "Expectedcount"
          },
          "expectedInterval": {
            "type": "string",
            "title": "Expectedinterval"
          },
          "observedCount": {
            "type": "integer",
            "title": "Observedcount"
          },
          "observedInterval": {
            "type": "string",
            "title": "Observedinterval"
          },
          "percentComplete": {
            "type": "number",
            "title": "Percentcomplete"
          },
          "percentCoverage": {
            "type": "number",
            "title": "Percentcoverage"
          },
          "datetimeFrom": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DatetimeObject"
              },
              {
                "type": "null"
              }
            ]
          },
          "datetimeTo": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DatetimeObject"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "expectedCount",
          "expectedInterval",
          "observedCount",
          "observedInterval",
          "percentComplete",
          "percentCoverage"
        ],
        "title": "Coverage"
      },
      "Date": {
        "properties": {
          "utc": {
            "type": "string",
            "title": "Utc"
          },
          "local": {
            "type": "string",
            "title": "Local"
          }
        },
        "type": "object",
        "required": ["utc", "local"],
        "title": "Date"
      },
      "DatetimeObject": {
        "properties": {
          "utc": {
            "type": "string",
            "title": "Utc"
          },
          "local": {
            "type": "string",
            "title": "Local"
          }
        },
        "type": "object",
        "required": ["utc", "local"],
        "title": "DatetimeObject"
      },
      "Datum": {
        "properties": {
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "data_avg_dur": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Avg Dur"
          },
          "organization": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization"
          },
          "lifecycle_stage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lifecycle Stage"
          }
        },
        "type": "object",
        "title": "Datum"
      },
      "EntityBase": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["id", "name"],
        "title": "EntityBase"
      },
      "EntityTypes": {
        "type": "string",
        "enum": ["government", "community", "research"],
        "title": "EntityTypes"
      },
      "Factor": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "interval": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interval"
          },
          "order": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Order"
          }
        },
        "type": "object",
        "required": ["label"],
        "title": "Factor"
      },
      "GeoJSON": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          },
          "coordinates": {
            "items": {},
            "type": "array",
            "title": "Coordinates",
            "default": []
          }
        },
        "type": "object",
        "required": ["type"],
        "title": "GeoJSON"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Instrument": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "isMonitor": {
            "type": "boolean",
            "title": "Ismonitor"
          },
          "manufacturer": {
            "$ref": "#/components/schemas/ManufacturerBase"
          }
        },
        "type": "object",
        "required": ["id", "name", "isMonitor", "manufacturer"],
        "title": "Instrument"
      },
      "InstrumentBase": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["id", "name"],
        "title": "InstrumentBase"
      },
      "InstrumentsResponse": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__v3__models__responses__Meta"
              }
            ],
            "default": {
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/Instrument"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "InstrumentsResponse"
      },
      "InstrumentsSortFields": {
        "type": "string",
        "const": "id",
        "title": "InstrumentsSortFields"
      },
      "Latest": {
        "properties": {
          "datetime": {
            "$ref": "#/components/schemas/DatetimeObject"
          },
          "value": {
            "type": "number",
            "title": "Value"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Coordinates"
          }
        },
        "type": "object",
        "required": ["datetime", "value", "coordinates"],
        "title": "Latest"
      },
      "LatestMeasurement": {
        "properties": {
          "parameter": {
            "type": "string",
            "title": "Parameter"
          },
          "value": {
            "type": "number",
            "title": "Value"
          },
          "lastUpdated": {
            "type": "string",
            "title": "Lastupdated"
          },
          "unit": {
            "type": "string",
            "title": "Unit"
          }
        },
        "type": "object",
        "required": ["parameter", "value", "lastUpdated", "unit"],
        "title": "LatestMeasurement"
      },
      "LatestMeasurementRow": {
        "properties": {
          "parameter": {
            "type": "string",
            "title": "Parameter"
          },
          "value": {
            "type": "number",
            "title": "Value"
          },
          "lastUpdated": {
            "type": "string",
            "title": "Lastupdated"
          },
          "unit": {
            "type": "string",
            "title": "Unit"
          },
          "sourceName": {
            "type": "string",
            "title": "Sourcename"
          },
          "averagingPeriod": {
            "$ref": "#/components/schemas/AveragingPeriodV1"
          }
        },
        "type": "object",
        "required": [
          "parameter",
          "value",
          "lastUpdated",
          "unit",
          "sourceName",
          "averagingPeriod"
        ],
        "title": "LatestMeasurementRow"
      },
      "LatestResponse": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__models__responses__Meta"
              }
            ],
            "default": {
              "license": "",
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/LatestRow"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "LatestResponse"
      },
      "LatestResponseV1": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__models__responses__Meta"
              }
            ],
            "default": {
              "license": "",
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/LatestRowV1"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "LatestResponseV1"
      },
      "LatestRow": {
        "properties": {
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "coordinates": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Coordinates"
              },
              {
                "type": "null"
              }
            ]
          },
          "measurements": {
            "items": {
              "$ref": "#/components/schemas/LatestMeasurement"
            },
            "type": "array",
            "title": "Measurements"
          }
        },
        "type": "object",
        "required": ["measurements"],
        "title": "LatestRow"
      },
      "LatestRowV1": {
        "properties": {
          "location": {
            "type": "string",
            "title": "Location"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Coordinates"
          },
          "measurements": {
            "items": {
              "$ref": "#/components/schemas/LatestMeasurementRow"
            },
            "type": "array",
            "title": "Measurements"
          }
        },
        "type": "object",
        "required": ["location", "coordinates", "measurements"],
        "title": "LatestRowV1"
      },
      "LicenseBase": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "dateFrom": {
            "type": "string",
            "format": "date",
            "title": "Datefrom"
          },
          "dateTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dateto"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": ["id", "url", "dateFrom"],
        "title": "LicenseBase"
      },
      "Location": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "locality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locality"
          },
          "timezone": {
            "type": "string",
            "title": "Timezone"
          },
          "country": {
            "$ref": "#/components/schemas/CountryBase"
          },
          "owner": {
            "$ref": "#/components/schemas/EntityBase"
          },
          "provider": {
            "$ref": "#/components/schemas/ProviderBase"
          },
          "isMobile": {
            "type": "boolean",
            "title": "Ismobile"
          },
          "isMonitor": {
            "type": "boolean",
            "title": "Ismonitor"
          },
          "instruments": {
            "items": {
              "$ref": "#/components/schemas/InstrumentBase"
            },
            "type": "array",
            "title": "Instruments"
          },
          "sensors": {
            "items": {
              "$ref": "#/components/schemas/SensorBase"
            },
            "type": "array",
            "title": "Sensors"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Coordinates"
          },
          "licenses": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/LicenseBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Licenses"
          },
          "bounds": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "maxItems": 4,
            "minItems": 4,
            "title": "Bounds"
          },
          "distance": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Distance"
          },
          "datetimeFirst": {
            "$ref": "#/components/schemas/DatetimeObject"
          },
          "datetimeLast": {
            "$ref": "#/components/schemas/DatetimeObject"
          }
        },
        "type": "object",
        "required": [
          "id",
          "timezone",
          "country",
          "owner",
          "provider",
          "isMobile",
          "isMonitor",
          "instruments",
          "sensors",
          "coordinates",
          "bounds",
          "datetimeFirst",
          "datetimeLast"
        ],
        "title": "Location"
      },
      "LocationsOrder": {
        "type": "string",
        "enum": [
          "city",
          "country",
          "location",
          "sourceName",
          "firstUpdated",
          "lastUpdated",
          "count",
          "random",
          "distance"
        ],
        "title": "LocationsOrder"
      },
      "LocationsResponseV1": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__models__responses__Meta"
              }
            ],
            "default": {
              "license": "",
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/LocationsRowV1"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "LocationsResponseV1"
      },
      "LocationsRow": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "entity": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "sources": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Source"
                },
                "type": "array"
              },
              {
                "$ref": "#/components/schemas/Source"
              }
            ],
            "title": "Sources"
          },
          "isMobile": {
            "type": "boolean",
            "title": "Ismobile"
          },
          "isAnalysis": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isanalysis"
          },
          "parameters": {
            "items": {
              "$ref": "#/components/schemas/openaq_api__models__responses__Parameter"
            },
            "type": "array",
            "title": "Parameters"
          },
          "sensorType": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sensortype"
          },
          "coordinates": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Coordinates"
              },
              {
                "type": "null"
              }
            ]
          },
          "lastUpdated": {
            "type": "string",
            "title": "Lastupdated"
          },
          "firstUpdated": {
            "type": "string",
            "title": "Firstupdated"
          },
          "measurements": {
            "type": "integer",
            "title": "Measurements"
          },
          "bounds": {
            "anyOf": [
              {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              {
                "type": "number"
              }
            ],
            "title": "Bounds"
          },
          "manufacturers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/openaq_api__models__responses__Manufacturer"
                },
                "type": "array"
              },
              {
                "$ref": "#/components/schemas/openaq_api__models__responses__Manufacturer"
              }
            ],
            "title": "Manufacturers"
          }
        },
        "type": "object",
        "required": [
          "id",
          "isMobile",
          "parameters",
          "lastUpdated",
          "firstUpdated",
          "measurements"
        ],
        "title": "LocationsRow"
      },
      "LocationsRowV1": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "country": {
            "type": "string",
            "title": "Country"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "cities": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cities"
          },
          "location": {
            "type": "string",
            "title": "Location"
          },
          "locations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Locations"
          },
          "sourceName": {
            "type": "string",
            "title": "Sourcename"
          },
          "sourceNames": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Sourcenames"
          },
          "sourceType": {
            "type": "string",
            "title": "Sourcetype"
          },
          "sourceTypes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Sourcetypes"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Coordinates"
          },
          "firstUpdated": {
            "type": "string",
            "title": "Firstupdated"
          },
          "lastUpdated": {
            "type": "string",
            "title": "Lastupdated"
          },
          "parameters": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Parameters"
          },
          "countsByMeasurement": {
            "items": {
              "$ref": "#/components/schemas/CountsByMeasurementItem"
            },
            "type": "array",
            "title": "Countsbymeasurement"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "id",
          "country",
          "location",
          "locations",
          "sourceName",
          "sourceNames",
          "sourceType",
          "sourceTypes",
          "coordinates",
          "firstUpdated",
          "lastUpdated",
          "parameters",
          "countsByMeasurement",
          "count"
        ],
        "title": "LocationsRowV1"
      },
      "LocationsSortFields": {
        "type": "string",
        "const": "id",
        "title": "LocationsSortFields"
      },
      "ManufacturerBase": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["id", "name"],
        "title": "ManufacturerBase"
      },
      "ManufacturersResponse": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__v3__models__responses__Meta"
              }
            ],
            "default": {
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/openaq_api__v3__models__responses__Manufacturer"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "ManufacturersResponse"
      },
      "ManufacturersSortFields": {
        "type": "string",
        "const": "id",
        "title": "ManufacturersSortFields"
      },
      "MeasOrder": {
        "type": "string",
        "enum": ["city", "country", "location", "datetime"],
        "title": "MeasOrder"
      },
      "Measurement": {
        "properties": {
          "value": {
            "type": "number",
            "title": "Value"
          },
          "parameter": {
            "$ref": "#/components/schemas/ParameterBase"
          },
          "period": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Period"
              },
              {
                "type": "null"
              }
            ]
          },
          "coordinates": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Coordinates"
              },
              {
                "type": "null"
              }
            ]
          },
          "summary": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Summary"
              },
              {
                "type": "null"
              }
            ]
          },
          "coverage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Coverage"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["value", "parameter"],
        "title": "Measurement"
      },
      "MeasurementsResponseV1": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__models__responses__Meta"
              }
            ],
            "default": {
              "license": "",
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/MeasurementsRowV1"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "MeasurementsResponseV1"
      },
      "MeasurementsRow": {
        "properties": {
          "locationId": {
            "type": "integer",
            "title": "Locationid"
          },
          "location": {
            "type": "string",
            "title": "Location"
          },
          "parameter": {
            "type": "string",
            "title": "Parameter"
          },
          "value": {
            "type": "number",
            "title": "Value"
          },
          "date": {
            "$ref": "#/components/schemas/Date"
          },
          "unit": {
            "type": "string",
            "title": "Unit"
          },
          "coordinates": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Coordinates"
              },
              {
                "type": "null"
              }
            ]
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "isMobile": {
            "type": "boolean",
            "title": "Ismobile"
          },
          "isAnalysis": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isanalysis"
          },
          "entity": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity"
          },
          "sensorType": {
            "type": "string",
            "title": "Sensortype"
          }
        },
        "type": "object",
        "required": [
          "locationId",
          "location",
          "parameter",
          "value",
          "date",
          "unit",
          "isMobile",
          "sensorType"
        ],
        "title": "MeasurementsRow"
      },
      "MeasurementsRowV1": {
        "properties": {
          "location": {
            "type": "string",
            "title": "Location"
          },
          "parameter": {
            "type": "string",
            "title": "Parameter"
          },
          "value": {
            "type": "number",
            "title": "Value"
          },
          "date": {
            "$ref": "#/components/schemas/Date"
          },
          "unit": {
            "type": "string",
            "title": "Unit"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Coordinates"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          }
        },
        "type": "object",
        "required": [
          "location",
          "parameter",
          "value",
          "date",
          "unit",
          "coordinates"
        ],
        "title": "MeasurementsRowV1"
      },
      "Owner": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["id", "name"],
        "title": "Owner"
      },
      "OwnersResponse": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__v3__models__responses__Meta"
              }
            ],
            "default": {
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/Owner"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "OwnersResponse"
      },
      "OwnersSortFields": {
        "type": "string",
        "const": "id",
        "title": "OwnersSortFields"
      },
      "ParameterBase": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "units": {
            "type": "string",
            "title": "Units"
          },
          "displayName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Displayname"
          }
        },
        "type": "object",
        "required": ["id", "name", "units"],
        "title": "ParameterBase"
      },
      "ParameterType": {
        "type": "string",
        "enum": ["pollutant", "meteorological"],
        "title": "ParameterType"
      },
      "ParametersResponseV1": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__models__responses__Meta"
              }
            ],
            "default": {
              "license": "",
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/ParametersRowV1"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "ParametersResponseV1"
      },
      "ParametersRow": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "displayName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Displayname"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "preferredUnit": {
            "type": "string",
            "title": "Preferredunit"
          }
        },
        "type": "object",
        "required": ["id", "name", "description", "preferredUnit"],
        "title": "ParametersRow"
      },
      "ParametersRowV1": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "displayName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Displayname"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "preferredUnit": {
            "type": "string",
            "title": "Preferredunit"
          }
        },
        "type": "object",
        "required": ["id", "name", "preferredUnit"],
        "title": "ParametersRowV1"
      },
      "ParametersSortFields": {
        "type": "string",
        "const": "id",
        "title": "ParametersSortFields"
      },
      "Period": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "interval": {
            "type": "string",
            "title": "Interval"
          },
          "datetimeFrom": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DatetimeObject"
              },
              {
                "type": "null"
              }
            ]
          },
          "datetimeTo": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DatetimeObject"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["label", "interval"],
        "title": "Period"
      },
      "PeriodNames": {
        "type": "string",
        "enum": ["hour", "day", "month", "year", "hod", "dow", "moy", "raw"],
        "title": "PeriodNames"
      },
      "ProjectsOrder": {
        "type": "string",
        "enum": ["id", "name", "subtitle", "firstUpdated", "lastUpdated"],
        "title": "ProjectsOrder"
      },
      "ProjectsResponse": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__models__responses__Meta"
              }
            ],
            "default": {
              "license": "",
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/ProjectsRow"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "ProjectsResponse"
      },
      "ProjectsRow": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "subtitle": {
            "type": "string",
            "title": "Subtitle"
          },
          "isMobile": {
            "type": "boolean",
            "title": "Ismobile"
          },
          "isAnalysis": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isanalysis"
          },
          "entity": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity"
          },
          "sensorType": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sensortype"
          },
          "locations": {
            "type": "integer",
            "title": "Locations"
          },
          "locationIds": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Locationids"
          },
          "countries": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Countries"
          },
          "parameters": {
            "items": {
              "$ref": "#/components/schemas/openaq_api__models__responses__Parameter"
            },
            "type": "array",
            "title": "Parameters"
          },
          "bbox": {
            "anyOf": [
              {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bbox"
          },
          "measurements": {
            "type": "integer",
            "title": "Measurements"
          },
          "firstUpdated": {
            "type": "string",
            "title": "Firstupdated"
          },
          "lastUpdated": {
            "type": "string",
            "title": "Lastupdated"
          },
          "sources": {
            "items": {
              "$ref": "#/components/schemas/ProjectsSource"
            },
            "type": "array",
            "title": "Sources"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "subtitle",
          "isMobile",
          "locations",
          "locationIds",
          "countries",
          "parameters",
          "measurements",
          "firstUpdated",
          "lastUpdated",
          "sources"
        ],
        "title": "ProjectsRow"
      },
      "ProjectsSource": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "readme": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readme"
          },
          "data_avg_dur": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Avg Dur"
          },
          "organization": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization"
          },
          "lifecycle_stage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lifecycle Stage"
          }
        },
        "type": "object",
        "required": ["id", "name"],
        "title": "ProjectsSource"
      },
      "Provider": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "sourceName": {
            "type": "string",
            "title": "Sourcename"
          },
          "exportPrefix": {
            "type": "string",
            "title": "Exportprefix"
          },
          "license": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "License"
          },
          "datetimeAdded": {
            "type": "string",
            "format": "date-time",
            "title": "Datetimeadded"
          },
          "datetimeFirst": {
            "type": "string",
            "format": "date-time",
            "title": "Datetimefirst"
          },
          "datetimeLast": {
            "type": "string",
            "format": "date-time",
            "title": "Datetimelast"
          },
          "ownerEntity": {
            "$ref": "#/components/schemas/EntityBase"
          },
          "parameters": {
            "items": {
              "$ref": "#/components/schemas/ParameterBase"
            },
            "type": "array",
            "title": "Parameters"
          },
          "bbox": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GeoJSON"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "sourceName",
          "exportPrefix",
          "datetimeAdded",
          "datetimeFirst",
          "datetimeLast",
          "ownerEntity",
          "parameters"
        ],
        "title": "Provider"
      },
      "ProviderBase": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["id", "name"],
        "title": "ProviderBase"
      },
      "ProvidersResponse": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__v3__models__responses__Meta"
              }
            ],
            "default": {
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/Provider"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "ProvidersResponse"
      },
      "ProvidersSortFields": {
        "type": "string",
        "const": "id",
        "title": "ProvidersSortFields"
      },
      "Sensor": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "parameter": {
            "$ref": "#/components/schemas/ParameterBase"
          },
          "datetimeFirst": {
            "$ref": "#/components/schemas/DatetimeObject"
          },
          "datetimeLast": {
            "$ref": "#/components/schemas/DatetimeObject"
          },
          "coverage": {
            "$ref": "#/components/schemas/Coverage"
          },
          "latest": {
            "$ref": "#/components/schemas/Latest"
          },
          "summary": {
            "$ref": "#/components/schemas/Summary"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "parameter",
          "datetimeFirst",
          "datetimeLast",
          "coverage",
          "latest",
          "summary"
        ],
        "title": "Sensor"
      },
      "SensorBase": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "parameter": {
            "$ref": "#/components/schemas/ParameterBase"
          }
        },
        "type": "object",
        "required": ["id", "name", "parameter"],
        "title": "SensorBase"
      },
      "SensorTypes": {
        "type": "string",
        "enum": ["reference grade", "low-cost sensor"],
        "title": "SensorTypes"
      },
      "SensorsResponse": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__v3__models__responses__Meta"
              }
            ],
            "default": {
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/Sensor"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "SensorsResponse"
      },
      "Sort": {
        "type": "string",
        "enum": ["asc", "desc"],
        "title": "Sort"
      },
      "SortOrder": {
        "type": "string",
        "enum": ["asc", "desc"],
        "title": "SortOrder"
      },
      "Source": {
        "properties": {
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "readme": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readme"
          },
          "organization": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization"
          },
          "lifecycle_stage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lifecycle Stage"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "Source"
      },
      "SourcesOrder": {
        "type": "string",
        "enum": ["sourceName", "firstUpdated", "lastUpdated"],
        "title": "SourcesOrder"
      },
      "SourcesResponse": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__models__responses__Meta"
              }
            ],
            "default": {
              "license": "",
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/SourcesRow"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "SourcesResponse"
      },
      "SourcesResponseV1": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__models__responses__Meta"
              }
            ],
            "default": {
              "license": "",
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/SourcesRowV1"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "SourcesResponseV1"
      },
      "SourcesRow": {
        "properties": {
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Datum"
              },
              {
                "type": "null"
              }
            ]
          },
          "readme": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readme"
          },
          "sourceId": {
            "type": "integer",
            "title": "Sourceid"
          },
          "locations": {
            "type": "integer",
            "title": "Locations"
          },
          "sourceName": {
            "type": "string",
            "title": "Sourcename"
          },
          "sourceSlug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sourceslug"
          }
        },
        "type": "object",
        "required": ["sourceId", "locations", "sourceName"],
        "title": "SourcesRow"
      },
      "SourcesRowV1": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "adapter": {
            "type": "string",
            "title": "Adapter"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "country": {
            "type": "string",
            "title": "Country"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "sourceURL": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "title": "Sourceurl"
          },
          "resolution": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resolution"
          },
          "contacts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Contacts"
          },
          "active": {
            "type": "boolean",
            "title": "Active"
          }
        },
        "type": "object",
        "required": [
          "url",
          "adapter",
          "name",
          "country",
          "sourceURL",
          "contacts",
          "active"
        ],
        "title": "SourcesRowV1"
      },
      "SourcesV1Order": {
        "type": "string",
        "const": "name",
        "title": "SourcesV1Order"
      },
      "SpatialTypes": {
        "type": "string",
        "enum": ["country", "location", "total"],
        "title": "SpatialTypes"
      },
      "Summary": {
        "properties": {
          "min": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min"
          },
          "q02": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Q02"
          },
          "q25": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Q25"
          },
          "median": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Median"
          },
          "q75": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Q75"
          },
          "q98": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Q98"
          },
          "max": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max"
          },
          "avg": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avg"
          },
          "sd": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sd"
          }
        },
        "type": "object",
        "title": "Summary"
      },
      "SummaryResponse": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__models__responses__Meta"
              }
            ],
            "default": {
              "license": "",
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/SummaryRow"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "SummaryResponse"
      },
      "SummaryRow": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "cities": {
            "type": "integer",
            "title": "Cities"
          },
          "sources": {
            "type": "integer",
            "title": "Sources"
          },
          "countries": {
            "type": "integer",
            "title": "Countries"
          },
          "locations": {
            "type": "integer",
            "title": "Locations"
          }
        },
        "type": "object",
        "required": ["count", "cities", "sources", "countries", "locations"],
        "title": "SummaryRow"
      },
      "Trend": {
        "properties": {
          "factor": {
            "$ref": "#/components/schemas/Factor"
          },
          "value": {
            "type": "number",
            "title": "Value"
          },
          "parameter": {
            "$ref": "#/components/schemas/ParameterBase"
          },
          "summary": {
            "$ref": "#/components/schemas/Summary"
          },
          "coverage": {
            "$ref": "#/components/schemas/Coverage"
          }
        },
        "type": "object",
        "required": ["factor", "value", "parameter", "summary", "coverage"],
        "title": "Trend"
      },
      "TrendsResponse": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__v3__models__responses__Meta"
              }
            ],
            "default": {
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/Trend"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "TrendsResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      },
      "openaq_api__models__responses__CountriesResponse": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__models__responses__Meta"
              }
            ],
            "default": {
              "license": "",
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/CountriesRow"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "CountriesResponse"
      },
      "openaq_api__models__responses__LocationsResponse": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__models__responses__Meta"
              }
            ],
            "default": {
              "license": "",
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/LocationsRow"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "LocationsResponse"
      },
      "openaq_api__models__responses__Manufacturer": {
        "properties": {
          "modelName": {
            "type": "string",
            "title": "Modelname"
          },
          "manufacturerName": {
            "type": "string",
            "title": "Manufacturername"
          }
        },
        "type": "object",
        "required": ["modelName", "manufacturerName"],
        "title": "Manufacturer"
      },
      "openaq_api__models__responses__MeasurementsResponse": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__models__responses__Meta"
              }
            ],
            "default": {
              "license": "",
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/MeasurementsRow"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "MeasurementsResponse"
      },
      "openaq_api__models__responses__Meta": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "default": "openaq-api"
          },
          "license": {
            "type": "string",
            "title": "License",
            "default": ""
          },
          "website": {
            "type": "string",
            "title": "Website",
            "default": "/"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "default": 1
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "default": 100
          },
          "found": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Found"
          }
        },
        "type": "object",
        "title": "Meta"
      },
      "openaq_api__models__responses__Parameter": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "unit": {
            "type": "string",
            "title": "Unit"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "average": {
            "type": "number",
            "title": "Average"
          },
          "parameter": {
            "type": "string",
            "title": "Parameter"
          },
          "lastValue": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lastvalue"
          },
          "displayName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Displayname"
          },
          "lastUpdated": {
            "type": "string",
            "title": "Lastupdated"
          },
          "parameterId": {
            "type": "integer",
            "title": "Parameterid"
          },
          "firstUpdated": {
            "type": "string",
            "title": "Firstupdated"
          },
          "manufacturers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/openaq_api__models__responses__Manufacturer"
                },
                "type": "array"
              },
              {
                "$ref": "#/components/schemas/openaq_api__models__responses__Manufacturer"
              }
            ],
            "title": "Manufacturers"
          }
        },
        "type": "object",
        "required": [
          "id",
          "unit",
          "count",
          "average",
          "parameter",
          "lastUpdated",
          "parameterId",
          "firstUpdated"
        ],
        "title": "Parameter"
      },
      "openaq_api__models__responses__ParametersResponse": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__models__responses__Meta"
              }
            ],
            "default": {
              "license": "",
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/ParametersRow"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "ParametersResponse"
      },
      "openaq_api__v3__models__responses__CountriesResponse": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__v3__models__responses__Meta"
              }
            ],
            "default": {
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/Country"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "CountriesResponse"
      },
      "openaq_api__v3__models__responses__LocationsResponse": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__v3__models__responses__Meta"
              }
            ],
            "default": {
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/Location"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "LocationsResponse"
      },
      "openaq_api__v3__models__responses__Manufacturer": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "instruments": {
            "items": {
              "$ref": "#/components/schemas/InstrumentBase"
            },
            "type": "array",
            "title": "Instruments"
          }
        },
        "type": "object",
        "required": ["id", "name", "instruments"],
        "title": "Manufacturer"
      },
      "openaq_api__v3__models__responses__MeasurementsResponse": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__v3__models__responses__Meta"
              }
            ],
            "default": {
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/Measurement"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "MeasurementsResponse"
      },
      "openaq_api__v3__models__responses__Meta": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "default": "openaq-api"
          },
          "website": {
            "type": "string",
            "title": "Website",
            "default": "/"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "default": 1
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "default": 100
          },
          "found": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Found"
          }
        },
        "type": "object",
        "title": "Meta"
      },
      "openaq_api__v3__models__responses__Parameter": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "units": {
            "type": "string",
            "title": "Units"
          },
          "displayName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Displayname"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": ["id", "name", "units"],
        "title": "Parameter"
      },
      "openaq_api__v3__models__responses__ParametersResponse": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/openaq_api__v3__models__responses__Meta"
              }
            ],
            "default": {
              "limit": 100,
              "name": "openaq-api",
              "page": 1,
              "website": "/"
            }
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/openaq_api__v3__models__responses__Parameter"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["results"],
        "title": "ParametersResponse"
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true
  }
}
